@model IPagedList<sklepik.Models.Product>
@{
    ViewBag.Title = "Home Page";
}

<h1>Welcome in Sklepik</h1>

<h3>Below you can browse through our products</h3>

<h5>You can change settings in Settings tab in navigation bar</h5>


<form method="get">
    <input type="search" name="searchTerm" />
    <input type="submit" value="search by name" />
</form>

<table class="table">
    <div class="pagedList" data-otf-target="#table">
        @Html.PagedListPager(Model,page=>Url.Action("Index",new { page}),PagedListRenderOptions.MinimalWithItemCountText)

    </div>
    <tr>
        <th>
            @sklepik.Resource.Image
        </th>
        <th>
            @sklepik.Resource.Name
        </th>
        <th>
            @sklepik.Resource.Price
        </th>
        <th>
            @sklepik.Resource.Description
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {

            <tr>
                <td>
                    @if (item.ImageSmall != null)
                    {


                        var base64 = Convert.ToBase64String(item.ImageSmall);
                        var imgSrc = String.Format("data:image/gif;base64,{0}", base64);


                        <img src="@imgSrc" width="50" height="50" />
                    }
                    @if (item.ImageSmall == null && item.Image != null)
                    {

                        var base64 = Convert.ToBase64String(item.Image);
                        var imgSrc = String.Format("data:image/gif;base64,{0}", base64);


                        <img src="@imgSrc" width="50" height="50" />
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @if (Request.Cookies["Vat"].Value == "1")
                    {
                        @Html.DisplayFor(modelItem => item.Price);
                    }
                    else
                    {
                        @(String.Format("{0}", item.Price * (item.Vat + 100) / 100))

                    }


                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>

                    @Html.ActionLink(@sklepik.Resource.Details, "Details", "Product", new { id = item.Id }, null) |
                    @Html.ActionLink(@sklepik.Resource.AddToCart, "OrderNow", "ShoppingCart", new { id = item.Id }, null)

                </td>
            </tr>
        
    }
</table>





